const PromptSync = require("prompt-sync");

/*
=============================================================================
EJERCICIO 4 - CALCULADORA B√ÅSICA
=============================================================================

üìñ ENUNCIADO:
Escribe un programa que reciba dos n√∫meros ingresados por el usuario y una 
operaci√≥n matem√°tica b√°sica (+, -, *, /). El programa debe realizar la 
operaci√≥n y mostrar el resultado correspondiente.

=============================================================================
üîí VALIDACIONES Y RESTRICCIONES:
=============================================================================
1. El programa debe aceptar SOLO n√∫meros v√°lidos (enteros o decimales, positivos o negativos).
2. La operaci√≥n debe ser exclusivamente uno de los siguientes s√≠mbolos: +, -, *, /.
3. Si el usuario ingresa texto, s√≠mbolos inv√°lidos, vac√≠o u otro caracter, 
   se debe mostrar un mensaje de error claro.
4. En el caso de divisi√≥n, se debe controlar el error de "divisi√≥n por cero".
5. El flujo debe ser robusto: no debe romperse frente a entradas inesperadas.
6. Los resultados num√©ricos deben mostrarse con claridad, con un m√°ximo 
   de 2 decimales en operaciones con resultado decimal.

=============================================================================
‚ö†Ô∏è CASOS DE ERROR (ENTRADAS INV√ÅLIDAS):
=============================================================================
1. Entrada: num1="abc", num2=5, operaci√≥n="+"     
   ‚Üí Salida: "Error: 'abc' no es un n√∫mero v√°lido."

2. Entrada: num1=7, num2=2, operaci√≥n="^"     
   ‚Üí Salida: "Error: '^' no es una operaci√≥n v√°lida. Usa +, -, *, /."

3. Entrada: num1=10, num2=0, operaci√≥n="/"     
   ‚Üí Salida: "Error: no se puede dividir entre cero."

4. Entrada: num1="", num2=4, operaci√≥n="*"     
   ‚Üí Salida: "Error: Debes ingresar un n√∫mero v√°lido."

5. Entrada: num1=5, num2=3, operaci√≥n=" + "    
   ‚Üí Salida: "Error: ' + ' no es una operaci√≥n v√°lida. Usa +, -, *, /."

=============================================================================
‚úÖ CASOS DE PRUEBA CORRECTOS:
=============================================================================
1. Entrada: num1=4, num2=2, operaci√≥n="+"     
   ‚Üí Salida esperada: "4 + 2 = 6"

2. Entrada: num1=15, num2=3, operaci√≥n="/"    
   ‚Üí Salida esperada: "15 / 3 = 5"

3. Entrada: num1=5.5, num2=2.2, operaci√≥n="*"     
   ‚Üí Salida esperada: "5.5 * 2.2 = 12.1"

4. Entrada: num1=2, num2=7, operaci√≥n="-"     
   ‚Üí Salida esperada: "2 - 7 = -5"

5. Entrada: num1=-8, num2=-2, operaci√≥n="*"     
   ‚Üí Salida esperada: "-8 * -2 = 16"

=============================================================================
üíª IMPLEMENTACI√ìN:
=============================================================================
*/

"use strict";
const prompt = require("prompt-sync")();

const calcularOperacion = (num1, num2, operador) => {
  try {
    let resultado = 0;

    //validaciones de datos de entrada
    if (num1 === "" || num2 === "")
      throw new Error("No pueden haber datos vac√≠os...");

    // Convierto a numeros los digitos para seguir validando
    num1 = parseFloat(num1);
    num2 = parseFloat(num2);

    if (isNaN(num1) || isNaN(num2))
      throw new Error("Solo se admiten valores num√©ricos...");

    if (!/^[+\-*/]$/.test(operador)) 
      throw new Error("Operador no v√°lido ...");

    if(operador === '/' && num2 === 0)
      throw new Error('Divisi√≥n por cero no definida!');

    // //Operaciones b√°sicas
    resultado = (operador === '+')
      ? (num1 + num2).toFixed(2)
      : (operador === '-')
      ? (num1 - num2).toFixed(2)
      : (operador === '*') 
      ? (num1 * num2).toFixed(2)
      : (num1 / num2).toFixed(2)

    return `${num1} ${operador} ${num2} = ${resultado}`;

  } catch (e) {
    console.error("‚ùå", e.message);
    return null;
  }
};

const resultado = calcularOperacion(
    prompt("Ingresa el primer numero: "),
    prompt("Ingresa el segundo numero: "),
    prompt("Ingresa la operaci√≥n a realizar: ")
  );

if (resultado !== null) console.log(resultado);
